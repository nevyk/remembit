rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    match /bookmarks/{bookmark} {
      allow create: if isSignedIn() 
                    && incomingData().owner == request.auth.uid 
                    && isValidBookmarkCreate();

      allow read: if isSignedIn() 
                  && existingData().owner == request.auth.uid;

      allow update: if isSignedIn() 
                    && existingData().owner == request.auth.uid
                    && isValidBookmarkUpdate();

      allow delete: if isSignedIn() 
                    && existingData().owner == request.auth.uid;
    }

    // Functions //
    function isSignedIn() {
      return request.auth.uid != null;
    }

    function existingData() {
      return resource.data;
    }

    function incomingData() {
      return request.resource.data
    }

    function isValidBookmarkCreate() {
      let requiredFields = ['owner', 'name', 'url', 'tags'];

      return request.resource.data.keys().hasAll(requiredFields)
        && request.resource.data.keys().hasOnly(requiredFields)
        && request.resource.data.owner is string
        && request.resource.data.name is string
        && request.resource.data.url is string
        && request.resource.data.tags is list
    }

    function isValidBookmarkUpdate() {
      let allowedFields = ['name', 'url', 'tags'];

      return (request.resource.data.diff(resource.data).affectedKeys().hasOnly(allowedFields))
    }
  }
}